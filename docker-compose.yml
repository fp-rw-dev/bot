version: "3"
services:
  operator:
    # command: sudo -u app sh -c 'cd dist && node --experimental-json-modules index.js'
    build: .
    init: true
    tty: true #user: "${UID}:${GID}"
    restart: always
    volumes:
      - $PWD:/home/app/data/ # TODO: remove this once ready for production
      - operator-logs:/home/app/data/logs/
    dns:
      - 1.1.1.1
      - 1.0.0.1
      - 8.8.8.8
      - 8.8.4.4
    env_file:
      - .env
    ports:
      - "127.0.0.1:9229:9229"
    links:
      - postgres:postgres.local
      - ocr:ocr.local
    healthcheck:
      test: ss | grep '162.159.13' -q
      interval: 10s
      timeout: 1s
      retries: 3
      start_period: 60s
    depends_on:
      ocr:
        condition: service_healthy
      postgres:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
  postgres:
    image: postgres
    restart: always
    # command: postgres -c listen_addresses=localhost
    environment:
      - POSTGRES_PASSWORD=operator_internal
      - PGUSER=postgres
    volumes:
      - operator-postgres:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    # dragonfly:
    #   image: docker.dragonflydb.io/dragonflydb/dragonfly
    #   command: --maxmemory 536870912 --memcache_port 11211 --proactor_threads 1
    #   restart: always
    #   ulimits:
    #     memlock: -1
    #   volumes:
    #     - dragonfly-data:/data/
    #   deploy:
    #     resources:
    #       limits:
    #         cpus: '1'
    #         memory: 578M
    #victoria:
    #image: 
  memcached:
    image: memcached:1
    command: memcached -m 64
    restart: always
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 128M
    # healthcheck:
    #   test: [ "CMD-SHELL", "nc", "-zw3", "localhost", "11211" ]
    #   interval: 5s
    #   timeout: 3s
    #   start_period: 3s
    # dragonfly:
    #   image: docker.dragonflydb.io/dragonflydb/dragonfly
    #   command: --maxmemory 536870912 --memcache_port 11211 --proactor_threads 1
    #   ulimits:
    #     memlock: -1
    #   volumes:
    #     - dragonfly-data:/data/
    #   deploy:
    #     resources:
    #       limits:
    #         cpus: '1'
    #         memory: 578M
  ocr:
    build: ./services/ocr/
    init: true
    restart: always
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
    healthcheck:
      test: [ "CMD", "/usr/bin/curl", "-fsSL", "http://127.0.0.1:3001/ping" ]
      interval: 3s
      timeout: 200ms
      start_period: 5s
      retries: 2
  canvas:
    build: ./services/canvas/
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 96M
    volumes:
      - operator-canvas:/app/db/
    # healthcheck:
    #   test: curl -fsSL http://127.0.0.1:1323/admin/reset
    #   interval: 3s
    #   timeout: 200ms
    #   start_period: 5s
    #   retries: 2
    # lua:
    #   build: ./services/lua/
    #   init: true
    #   deploy:
    #     resources:
    #       limits:
    #         cpus: '1'
    #         memory: 2G
    # sandbox:
    #   image: execution-sandbox
    #   deploy:
    #     resources:
    #       limits:
    #         cpus: '1'
    #         memory: 2G
    #   healthcheck:
    #     test: [ "CMD", "curl", "-o", "/dev/null", "127.0.0.1:3001" ]
    #     interval: 3s
    #     timeout: 200ms
    #     retries: 2


volumes:
  operator-postgres:
    external: false
  operator-logs:
    external: false
  operator-canvas:
    external: false
